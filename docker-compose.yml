services:
  web:
    build: .
    command: >
      bash -c "python manage.py migrate && python manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    environment:
      - DEBUG=False
      - DATABASE_HOST=db
    volumes:
      - .:/code
      - static_volume:/code/static
    ports:
      - "8000:8000"
    depends_on:
      - db

  db:
    image: postgres
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=CW_DRF
      - POSTGRES_USER=postgres
    expose:
      - "5432"

  redis:
    image: redis
    volumes:
      - ./redisdata:/data
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 1s
      timeout: 3s
      retries: 5
    depends_on:
      - db
      - web

  celery:
    build: .
    command: >
      bash -c "celery -A config  worker --loglevel=info"
    env_file:
      - .env
    depends_on:
      - redis
      - db
    volumes:
      - .:/code

  celery_beat:
    build: .
    env_file:
      - .env
    command: >
      bash -c "celery -A config beat --loglevel=info"
    depends_on:
      - redis
      - db
    volumes:
      - .:/code

  nginx:
    build: ./nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/code/static
    depends_on:
      - celery_beat
      - web

volumes:
  postgres_data:
  static_volume:
  redis_data: