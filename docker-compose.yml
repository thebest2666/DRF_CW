services:
  web:
    build: .
    command: >
      bash -c "python3 manage.py migrate && python3 manage.py runserver 0.0.0.0:8000"
    env_file:
      - .env
    environment:
      - DEBUG=False
      - DATABASE_HOST=db
    volumes:
      - .:/code
      - static_volume:/code/static
    ports:
      - "8000:8000"
    depends_on:
     db:
       condition: service_healthy

  db:
    image: postgres
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=postgres
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    expose:
      - "5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5

  redis:
    image: redis
    volumes:
      - ./redisdata:/data
    healthcheck:
      test: [ "CMD-SHELL", "redis-cli ping | grep PONG" ]
      interval: 1s
      timeout: 3s
      retries: 5
    depends_on:
      - db
      - web

  celery_worker:
    build:
      context: .
    command: celery -A config worker --loglevel=info
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/1

  celery_beat:
    build:
      context: .
    command: celery -A config beat --loglevel=info
    volumes:
      - .:/app
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
      environment:
      - CELERY_BROKER_URL=redis://redis:6379/1


  nginx:
    build: ./nginx
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - static_volume:/code/static
    depends_on:
      - celery_beat
      - web

volumes:
  postgres_data:
  static_volume:
  redis_data: